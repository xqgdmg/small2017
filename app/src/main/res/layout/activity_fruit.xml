<?xml version="1.0" encoding="utf-8"?>
<!--fitsSystemWindows如果值为true,就会调整view的paingding属性来给system windows留出空间...
用于实现状态栏，即 沉浸式状态栏！-->
<!--CoordinatorLayout 其实就是加强版的 FrameLayout-->
<android.support.design.widget.CoordinatorLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true">

    <!-- AppBarLayout is a vertical {@link LinearLayout} 其实就是一个 竖直的 LinearLayout 集成了材料布局 和行为-->
    <android.support.design.widget.AppBarLayout
        android:id="@+id/AppBarLayout"
        android:layout_width="match_parent"
        android:layout_height="250dp"
        android:fitsSystemWindows="true">

        <!--is a wrapper for {@link Toolbar}-->
        <!--a direct child of a {@link AppBarLayout}-->
        <!--CollapsingToolbarLayout主要是提供一个可折叠的Toolbar容器，对容器中的不同View设置layout_collapseMode折叠模式，来达到不同的折叠效果。-->

        <!--app:layout_scrollFlags有5种参数：
1.scroll: 所有想滚动出屏幕的view都需要设置这个flag， 没有设置这个flag的view将被固定在屏幕顶部。例如，TabLayout 没有设置这个值，将会停留在屏幕顶部。
2.snap:小于一半高度，Toolbar回弹回去，大于一半高度，全隐藏Toolbar
3.enterAlways: 滑到哪里就停在哪里，最大位置全隐藏Toolbar。
4.enterAlwaysCollapsed: 和enterAlways的差别，你的视图只能已最小高度进入，只有当滚动视图到达顶部时才扩大到完整高度。
5.exitUntilCollapsed: 滚动退出屏幕，最后折叠在顶端，向下滑时要等item是第一个时才能滑出Toolbar。-->

        <!--app:contentScrim="?attr/colorPrimaryDark" 指定CollapsingToolbarLayout完全被滚出到屏幕外时的ColorDrawable-->
        <android.support.design.widget.CollapsingToolbarLayout
            android:id="@+id/collapsing_toolbar"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
            android:fitsSystemWindows="true"
            app:contentScrim="?attr/colorPrimary"
            app:layout_scrollFlags="scroll|exitUntilCollapsed">

            <!--layout_collapseMode “pin”：固定模式，在折叠的时候最后固定在顶端；“parallax”：视差模式，在折叠的时候会消失。-->
            <!--这个 ImageView和Toolbar 设置什么样的 layout_collapseMode 都一样的效果？-->
            <ImageView
                android:id="@+id/fruit_image_view"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:scaleType="centerCrop"
                android:fitsSystemWindows="true"
                app:layout_collapseMode="parallax" />

            <android.support.v7.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                app:layout_collapseMode="pin" />
        </android.support.design.widget.CollapsingToolbarLayout>
    </android.support.design.widget.AppBarLayout>

    <!-- app:layout_behavior="@string/appbar_scrolling_view_behavior" 通知布局中包含滑动组件！ -->
    <!--如果没有这个 NestedScrollView 会盖在头部的布局上面，因为父控件其实是 FrameLayout，可以看出 layout_behavior 是用在后面的 View 上-->
    <android.support.v4.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_behavior="@string/appbar_scrolling_view_behavior">

        <LinearLayout
            android:orientation="vertical"
            android:layout_width="match_parent"
            android:layout_height="wrap_content">

            <android.support.v7.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="15dp"
                android:layout_marginLeft="15dp"
                android:layout_marginRight="15dp"
                android:layout_marginTop="35dp"
                app:cardCornerRadius="4dp">

                <TextView
                    android:id="@+id/fruit_content_text"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_margin="10dp" />
            </android.support.v7.widget.CardView>
        </LinearLayout>
    </android.support.v4.widget.NestedScrollView>

    <!--layout_anchorGravity 很容易理解-->
    <!--layout_anchor 很容易理解-->
    <!--为什么这个消失了，这个和头部的 AppBarLayout 平级-->
    <android.support.design.widget.FloatingActionButton
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_margin="16dp"
        android:src="@drawable/ic_comment"
        app:layout_anchor="@id/AppBarLayout"
        app:layout_anchorGravity="bottom|end" />
</android.support.design.widget.CoordinatorLayout>